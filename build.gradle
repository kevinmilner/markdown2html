/*
 * opensha-dev dependencies
 */

apply plugin: 'java-library'

ext {
    parentProject = 'opensha'
}

apply from: '../opensha/build-common.gradle'

dependencies {
    implementation project(path: ':opensha')
    implementation project(path: ':opensha', configuration: 'implResolvable')
}

task appJar (type: Jar, dependsOn: ':'+project.parentProject+':fatJar') {
    archiveBaseName = "markdown2html"
    from { configurations.apiResolvable.collect {
        it.isDirectory() ? it : zipTree(it).matching {
            exclude { it.path.contains('META-INF') }
        }
    }}
    // include compiled source from this project
    from sourceSets.main.allJava
    // include upstream project fat jar
    from zipTree(file('../'+project.parentProject+'/build/libs/'+project.parentProject+'-all.jar')).matching {
        exclude 'build.githash'
        exclude 'build.gitbranch'
        exclude 'build.date'
        exclude { it.path.contains('META-INF') }
        exclude '**/doc/**'
        exclude '**/cpt/**'
        exclude '**/images/**'
        exclude '**/refFaultParamDb/**'
        exclude '**/data/**'
        exclude '**/scratchData/**'
    }
    manifest {
        attributes(
            'Class-Path': configurations.apiResolvable.collect { it.getName() }.join(' '),
            'Main-Class': "net.kevinmilner.markdown.MarkdownHTMLConvert"
        )
    }
    
    duplicatesStrategy = 'exclude'
    with jar
}
